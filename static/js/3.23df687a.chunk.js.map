{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","redux/utilits/validators/validators.js","components/common/FormsController.js","components/contentAndPost/myPosts/PostAdder.jsx","components/contentAndPost/myPosts/PostAdderContainer.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/contentAndPost/myPosts/StatusWithHooks.jsx","components/contentAndPost/myPosts/ProfileInfo.jsx","components/contentAndPost/myPosts/Profile.jsx","HOC/withAuthRedirect.js","components/contentAndPost/myPosts/ProfileContainer.jsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","maxLength","TextArea","input","meta","props","className","styles","formControl","error","touched","required","value","PostAdder","React","memo","stupidPosts","state","profilePage","posts","map","item","message","PostAdderFormForClient","onSubmit","values","addPost","newPostText","maxLength20","reduxForm","form","handleSubmit","Field","name","placeholder","component","validate","PostAdderContainer","connect","store","dispatch","addPostActionCreator","_slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","StatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileInfo","profile","alt","src","photos","small","fullName","aboutMe","Profile","mapStateToPropsForRedirect","isAuth","auth","ProflieContainer","userCode","this","match","params","userId","history","getProfileThunkCreator","getStatusThunkCreator","to","updateStatusThunkCreator","Component","compose","setUserProfile","withRouter","RedirectComponent"],"mappings":"wNACe,SAASA,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E,IER8BW,E,kBCL1BC,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,sBACjD,OACI,yBAAKC,UAAaC,IAAOC,YAAc,IAAMD,IAAOE,OAChD,8CAAcN,EAAWE,IACxBD,EAAKK,OAASL,EAAKM,SAAW,8BAAON,EAAKK,SDN1CE,EAAW,SAACC,GACrB,IAAKA,EAAS,MAAO,qBEQdC,EAAYC,IAAMC,MAAK,SAAAV,GAE9B,IAKIW,EAAcX,EAAMY,MAAMC,YAAYC,MAAMC,KAAI,SAACC,GACjD,OAAO,6BAAMA,EAAKC,YAGtB,OAEI,kBAACC,EAAD,CAAwBC,SAXP,SAACC,GAClBpB,EAAMqB,QAAQD,EAAOE,aACrBF,EAAOE,YAAc,IASiCX,YAAeA,OAIvEY,GFnBiC3B,EEmBG,GFnBY,SAAEW,GACpD,GAAIA,EAAMlB,OAASO,EACf,MAAM,gBAAN,OAAuBA,EAAvB,cEgCJsB,EAAyBM,YAAU,CAACC,KAAM,yBAAjBD,EAbF,SAACxB,GAIxB,OACI,0BAAMC,UAAY,qBAAqBkB,SAAYnB,EAAM0B,cACrD,yBAAKzB,UAAU,eAAeD,EAAMW,aACpC,kBAACgB,EAAA,EAAD,CAAOC,KAAO,cAAcC,YAAc,iBAAiBC,UAAajC,EAAUkC,SAAY,CAACzB,EAAUiB,KACzG,yBAAKtB,UAAY,SAAQ,4BAAQA,UAAY,gBAApB,oB,QCqDtB+B,EAFUC,aAhBH,SAACC,GACnB,MAAO,CACHtB,MAAOsB,MAIU,SAACC,GACtB,MAAO,CACHd,QAAS,SAACC,GACNa,EAASC,YAAqBd,QAOjBW,CAA8CzB,G,YCrFxD,SAAS6B,EAAeC,EAAKtD,GAC1C,OCLa,SAAyBsD,GACtC,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKtD,GACjD,GAAsB,qBAAXyD,QAA4BA,OAAOC,YAAYvD,OAAOmD,GAAjE,CACA,IAAIK,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKX,EAAIG,OAAOC,cAAmBE,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGzC,QAETvB,GAAK2D,EAAKtD,SAAWL,GAH8C4D,GAAK,IAK9E,MAAOS,GACPR,GAAK,EACLC,EAAKO,EACL,QACA,IACOT,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBL,EAAKtD,IAAM,OAAAsE,EAAA,GAA2BhB,EAAKtD,IGLjF,WACb,MAAM,IAAIuE,UAAU,6IHIgF,GIFtG,IAwCeC,EAxCS,SAACxD,GAAU,QAKDyD,oBAAS,GALR,GAK1BC,EAL0B,KAKhBC,EALgB,SAMLF,mBAASzD,EAAM4D,QANV,GAM1BA,EAN0B,KAMlBC,EANkB,KAQ/BC,qBAAU,WAAOD,EAAU7D,EAAM4D,UAAU,CAAC5D,EAAM4D,SAgBlD,OACQ,8BACMF,GACF,6BACI,0BAAMK,cAlBE,WACpBJ,GAAY,KAiByC3D,EAAM4D,SAGlDF,GAAY,6BACT,2BAAOM,SAbA,SAACC,GACpBJ,EAAUI,EAAEC,cAAc3D,QAYqB4D,OAlBzB,WACtBR,GAAY,GACZ3D,EAAMoE,aAAaR,IAgByDS,UAAY,OAAO9D,MAASqD,OCJjGU,EAvBK,SAACtE,GAGjB,OAAKA,EAAMuE,QAMP,6BACI,6BAAK,yBAAKC,IAAM,GAAGC,IAAKzE,EAAMuE,QAAQG,OAAOC,SAC7C,6BAAM3E,EAAMuE,QAAQK,UACpB,6BAAM5E,EAAMuE,QAAQM,SACpB,kBAAC,EAAD,CAAkBjB,OAAU5D,EAAM4D,OAAQQ,aAAgBpE,EAAMoE,gBAT7D,sCCLA,SAASU,EAAQ9E,GAC5B,OACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,WAAf,WACA,kBAAC,EAAD,CAAasE,QAAWvE,EAAMuE,QAASX,OAAU5D,EAAM4D,OAAQQ,aAAgBpE,EAAMoE,eACrF,kBAAC,EAAD,O,WCPRW,EAA6B,SAACnE,GAC9B,MAAO,CACHoE,OAAQpE,EAAMqE,KAAKD,S,OCGrBE,E,kLAIE,IAAIC,EAAWC,KAAKpF,MAAMqF,MAAMC,OAAOC,OAElCJ,IACDA,EAAWC,KAAKpF,MAAMuF,SAElBH,KAAKpF,MAAMwF,QAAQpC,KAAK,UAGhCgC,KAAKpF,MAAMyF,uBAAuBN,GAGlCC,KAAKpF,MAAM0F,sBAAsBP,K,+BAKjC,OAA0B,IAAtBC,KAAKpF,MAAMgF,OAAyB,kBAAC,IAAD,CAAUW,GAAK,WAEnD,kBAAC,EAAD,iBAAaP,KAAKpF,MAAlB,CAAyBuE,QAAWa,KAAKpF,MAAMuE,QAASX,OAAUwB,KAAKpF,MAAM4D,OAAQQ,aAAgBgB,KAAKpF,MAAM4F,gC,GAtB7FnF,IAAMoF,WAoCtBC,sBACX7D,aAVkB,SAACrB,GACnB,MAAO,CACH2D,QAAS3D,EAAMC,YAAY0D,QAC3BS,OAAQpE,EAAMqE,KAAKD,OACnBpB,OAAQhD,EAAMC,YAAY+C,OAC1B2B,OAAQ3E,EAAMqE,KAAKM,UAKG,CACtBQ,mBACAN,uBAAwBA,IACxBC,sBAAuBA,IACvBE,yBAA0BA,MAE9BI,KDzC4B,SAACH,GAAe,IACtCI,EADqC,uKAInC,OAA0B,IAAtBb,KAAKpF,MAAMgF,OAAyB,kBAAC,IAAD,CAAUW,GAAK,WAEhD,kBAACE,EAAcT,KAAKpF,WANQ,GACXS,IAAMoF,WAatC,OAFiC5D,YAAQ8C,EAAR9C,CAAqCgE,KCsB3DH,CASZZ","file":"static/js/3.23df687a.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","\r\n\r\nexport const required = (value) => {\r\n    if (!value) { return 'Field is required' }\r\n    if (value) { return undefined }\r\n}\r\n\r\n\r\n\r\nexport const maxLengthThunkCreator = ( maxLength ) => ( value ) => {\r\n    if (value.length > maxLength) \r\n        return `MaxLength is ${maxLength} symbols`\r\n    \r\n    return undefined\r\n}","import React from 'react'\r\nimport styles from './FormsController.module.css'\r\n\r\n\r\nexport const TextArea = ({input, meta, ...props}) => {\r\n    return(\r\n        <div className = {styles.formControl + ' ' + styles.error}>\r\n            <textarea {...input} {...props} />\r\n            {meta.error && meta.touched && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/* export const Input = ({input, meta, ...props}) => {\r\n    return(\r\n        <div className = {styles.formControl + ' ' + styles.error}>\r\n            <input {...input} {...props} />\r\n            {meta.error && meta.touched && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n */","\r\nimport React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport { TextArea } from '../../common/FormsController'\r\n//import { onSubmit } from '../../../redux/auth-reducer'\r\n\r\nimport { required, maxLengthThunkCreator } from './../../../redux/utilits/validators/validators'\r\n\r\n\r\n\r\n\r\nexport let PostAdder = React.memo(props => {\r\n\r\n    let addPostOnClick = (values) => {\r\n        props.addPost(values.newPostText)\r\n        values.newPostText = ''\r\n    }\r\n\r\n    let stupidPosts = props.state.profilePage.posts.map((item) => {\r\n        return <div>{item.message}</div>\r\n    })\r\n\r\n    return (\r\n\r\n        <PostAdderFormForClient onSubmit = { addPostOnClick } stupidPosts = {stupidPosts} /> // ass\r\n    )\r\n})\r\n\r\nconst maxLength20 = maxLengthThunkCreator(20)\r\n\r\nexport let PostAdderForm = (props) => {\r\n    \r\n    \r\n\r\n    return(\r\n        <form className = 'wrapper-post-adder' onSubmit = {props.handleSubmit}>\r\n            <div className=\"stupidPosts\">{props.stupidPosts}</div>  \r\n            <Field name = 'newPostText' placeholder = 'Type Something' component = {TextArea} validate = {[required, maxLength20]}/>\r\n            <div className = \"adder\"><button className = \"adder-button\">make a post</button></div> \r\n        </form>\r\n    )\r\n}\r\n\r\nlet PostAdderFormForClient = reduxForm({form: 'profileAddNewPostForm'}) (PostAdderForm)","//import './PostAdder.css'\r\n//import React from 'react'\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer'\r\nimport {PostAdder} from './PostAdder'\r\nimport { connect } from 'react-redux'\r\n\r\n//import StoreContext from '../../../storeContext'\r\n\r\n\r\n//export default function PostAdderContainer() {\r\n\r\n    //console.log(props.state.profileReducer.posts);\r\n\r\n    //let stupidPosts = props.state.profileReducer.posts.map((item) => {\r\n    //    return <div>{item.message}</div>\r\n    //})\r\n\r\n    //console.log(props.state.posts[0]);\r\n\r\n    //let one = props.state.posts[0]\r\n\r\n    //let TextOfNewPostElement = React.createRef()\r\n\r\n    //debugger\r\n\r\n    //let addPostOnClick = (newText) => {\r\n        //let newText = TextOfNewPostElement.current.value;\r\n        //props.dispatch(addPostActionCreator(newText))\r\n        //props.addPost(newText)\r\n        //TextOfNewPostElement.current.value = ''\r\n\r\n    //}\r\n    \r\n    //debugger\r\n\r\n    //let onChangeWatcher = (newValue) => {\r\n        //let newValue = TextOfNewPostElement.current.value;\r\n        //console.log(newValue);\r\n        //props.dispatch(changeNewPostTextActionCreator(newValue))\r\n        //props.changeNewPostText(newValue)\r\n    //}\r\n\r\n    \r\n\r\n    //return(\r\n    //    <StoreContext.Consumer> \r\n    //        { (store) => {\r\n    //           \r\n    //            let addPostOnClick = (newText) => {\r\n                    //let newText = TextOfNewPostElement.current.value;\r\n    //                store.dispatch(addPostActionCreator(newText))\r\n                    //props.addPost(newText)\r\n                    //TextOfNewPostElement.current.value = ''\r\n                    \r\n    //            }\r\n                \r\n                //debugger\r\n            \r\n    //            let onChangeWatcher = (newValue) => {\r\n                    //let newValue = TextOfNewPostElement.current.value;\r\n                    //console.log(newValue);\r\n    //                store.dispatch(changeNewPostTextActionCreator(newValue))\r\n                    //props.changeNewPostText(newValue)\r\n    //            }\r\n    //            return <PostAdder state = {store.getState()} changeNewPostText = {onChangeWatcher} addPost = {addPostOnClick}/>\r\n    //       }\r\n    //    }\r\n    //    </StoreContext.Consumer>\r\n    //)\r\n//}\r\n\r\n\r\n\r\nlet mapStateToProps = (store) => {\r\n    return {\r\n        state: store\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nlet PostAdderContainer = connect(mapStateToProps, mapDispatchToProps) (PostAdder)\r\n\r\nexport default PostAdderContainer","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react' \r\nimport { useEffect } from 'react'\r\n\r\nconst StatusWithHooks = (props) => {\r\n\r\n\r\n\r\n    //let stateWithSetState = useState(true)\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {setStatus(props.status)}, [props.status])\r\n    \r\n    const activateEditing = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditing = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    \r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value) \r\n    }\r\n    \r\n    \r\n    return (\r\n            <div>\r\n                {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick = {activateEditing}>{props.status}</span>\r\n                </div>\r\n                }    \r\n                {editMode && <div>\r\n                    <input onChange = {onStatusChange} onBlur = {deActivateEditing} autoFocus = 'true' value = {status}/>\r\n                </div>}\r\n            </div>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default StatusWithHooks","import React from 'react'\r\n//import Status from './Status'\r\nimport StatusWithHooks from './StatusWithHooks';\r\n\r\n\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    \r\n    \r\n    if (!props.profile) {\r\n        return <div>wait</div>\r\n\r\n    }   \r\n\r\n    return (\r\n        <div>\r\n            <div><img alt = '' src={props.profile.photos.small}/></div>\r\n            <div>{props.profile.fullName}</div>\r\n            <div>{props.profile.aboutMe}</div>\r\n            <StatusWithHooks  status = {props.status} updateStatus = {props.updateStatus} />\r\n        </div>\r\n    ) \r\n\r\n    \r\n\r\n    \r\n}\r\n\r\n\r\nexport default ProfileInfo ","import React from \"react\"\r\nimport './Profile.css'\r\n//import PostAdder from './PostAdder'\r\nimport PostAdderContainer from \"./PostAdderContainer\"\r\nimport ProfileInfo from './ProfileInfo'\r\n\r\n\r\nexport default function Profile(props) {\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"profile\">Profile</div>\r\n            <ProfileInfo profile = {props.profile} status = {props.status} updateStatus = {props.updateStatus} />\r\n            <PostAdderContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            \r\n            if (this.props.isAuth === false) return <Redirect to = '/login' />\r\n            \r\n            return <Component {...this.props} />\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let connectedRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return connectedRedirectComponent\r\n}\r\n\r\n","import React from 'react' \r\nimport Proflie from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport { setUserProfile } from '../../../redux/profile-reducer'\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\n//import { usersAPI } from '../../../api/api'\r\nimport { getProfileThunkCreator, getStatusThunkCreator, updateStatusThunkCreator} from '../../../redux/profile-reducer'\r\nimport { withAuthRedirect } from '../../../HOC/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nclass ProflieContainer extends React.Component {\r\n\r\n    \r\n    componentDidMount() {\r\n        let userCode = this.props.match.params.userId\r\n        //console.log(this.props);\r\n        if (!userCode) {\r\n            userCode = this.props.userId  \r\n            if (!userCode) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfileThunkCreator(userCode)\r\n        \r\n    \r\n        this.props.getStatusThunkCreator(userCode)\r\n        \r\n        //this.props.getStatusThunkCreator(userCode)\r\n    }\r\n    render () {\r\n        if (this.props.isAuth === false) return <Redirect to = '/login' /> //It's redirect\r\n        return (\r\n            <Proflie {...this.props} profile = {this.props.profile} status = {this.props.status} updateStatus = {this.props.updateStatusThunkCreator} /> //import props from ProfileContainer to Profile\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.profilePage.status,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect (mapStateToProps, {\r\n        setUserProfile, \r\n        getProfileThunkCreator: getProfileThunkCreator,\r\n        getStatusThunkCreator: getStatusThunkCreator,\r\n        updateStatusThunkCreator: updateStatusThunkCreator\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n) (ProflieContainer)   // using compose to less code and make this one more readable\r\n\r\n/* let AuthRedirectComponent = withAuthRedirect(ProflieContainer)\r\nlet withUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\n\r\nexport default connect (mapStateToProps, {setUserProfile, getProfileThunkCreator: getProfileThunkCreator}) (withUrlDataContainerComponent) */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}