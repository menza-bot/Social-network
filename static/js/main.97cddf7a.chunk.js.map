{"version":3,"sources":["components/common/FormsController.module.css","api/api.js","redux/auth-reducer.js","redux/users-reducer.js","redux/component-reducer.js","redux/redux-store.js","components/sidebar/SidebarList.jsx","components/sidebar/Sidebar.js","components/contentAndPost/music/Music.jsx","components/contentAndPost/settings/Settings.jsx","components/contentAndPost/findSomeone/getUsersF.jsx","redux/selectors/users-selectors.js","components/contentAndPost/findSomeone/getUsersContainer.jsx","components/contentAndPost/findSomeone/findSomeone.js","components/Login/Login.js","components/contentAndPost/Content.js","components/header/HeaderLogin.jsx","components/header/Header.js","components/header/HeaderContainer.jsx","components/app/App.js","index.js","redux/profile-reducer.js"],"names":["module","exports","axiosInstance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","makeUsersFollowed","userID","post","makeUsersUnfollowed","delete","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","getAuth","getLogin","email","password","getLogout","initialState","login","logout","isAuth","setUserData","type","AuthThunkCreator","dispatch","resultCode","id","LogoutThunkCreator","authReducer","state","action","initialstate","users","totalUsersCount","isFetching","followingInProgress","follow","unFollow","usersReducer","map","u","followed","currentPageProps","initialized","contentReducer","reducers","combineReducers","usersPage","profilePage","profileReducer","form","formReducer","auth","content","store","createStore","applyMiddleware","thunkMiddleware","window","NavLinksMapped","header","link","item","to","key","SidebarList","className","Sidebar","props","Music","Settings","GetUsersF","pageCount","Math","ceil","pages","i","push","onClick","e","onPageChanged","name","unfollowAcceptThunkCreator","followAcceptThunkCreator","getPageSize","createSelector","filter","getCurretPage","getTotalUsersCount","getToggleIsFollowing","toggleIsFollowing","GetUsersContainer","getUsersThunkCreator","this","React","Component","compose","connect","setUsersCurrentPage","items","FindSomeone","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","error","style","fromSummaryError","LoginThunkCreator","message","messages","length","stopSubmit","_error","formData","ProfileContainer","lazy","News","Content","initializeContent","path","render","Suspense","fallback","withRouter","promise","Promise","all","HeaderLogin","Header","HeaderContainer","App","ReactDOM","document","getElementById","posts","listOfNamesData","profile","addPostActionCreator","newPostText","PostMessage","setUserProfile","setStatus","getProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","somePost","stateCopy","log"],"mappings":"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","file":"static/js/main.97cddf7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsController_formControl__1hHKa\",\"error\":\"FormsController_error__2p3T6\",\"fromSummaryError\":\"FormsController_fromSummaryError__3lJuo\"};","\r\nimport * as axios from 'axios'\r\n//import userId from './../components/contentAndPost/myPosts/ProfileContainer'\r\n\r\n//const baseUrl = `https://social-network.samuraijs.com/api/1.0/`\r\n\r\n\r\nexport const axiosInstance = axios.create({  //this tool hepls us to tune our default axios\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': '694b4ab8-8917-48c6-9edf-af5966ffc44a'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return axiosInstance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then((response) => { \r\n                return response.data\r\n            })\r\n    },\r\n    makeUsersFollowed(userID) {\r\n        return axiosInstance.post(`follow/${userID}`)\r\n    },\r\n    makeUsersUnfollowed(userID) {\r\n        return axiosInstance.delete(`follow/${userID}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete object, please use profileAPI!')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return axiosInstance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return axiosInstance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return axiosInstance.put(`profile/status`, {status: status})\r\n    }\r\n\r\n}\r\n\r\nexport const  authAPI = {\r\n    getAuth() {\r\n        return axiosInstance.get(`auth/me`)\r\n    },\r\n    getLogin(email, password) {\r\n        return axiosInstance.post(`auth/login`, {email, password})\r\n    },\r\n\r\n    \r\n    getLogout() {\r\n        return axiosInstance.delete(`auth/login`)\r\n    }\r\n}\r\n//axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${currentPageProps}&count=${this.props.state.usersPage.pageSize}`).then(response => {this.props.setUsers(response.data.items)})\r\n","import { stopSubmit } from 'redux-form'\r\nimport { authAPI } from '../api/api'\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    logout: null,\r\n    isAuth: false,\r\n    password: null\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'SET-USER-DATA': {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            } \r\n        }\r\n        case 'ON-SUBMIT': {\r\n            return {\r\n                ...state,\r\n                ...action.password,\r\n                ...action.email,\r\n                isAuth: true\r\n            }\r\n        }\r\n        \r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\nexport let setUserData = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: 'SET-USER-DATA',\r\n        data: {\r\n            userId,\r\n            email,\r\n            login,\r\n            isAuth\r\n        }\r\n    }\r\n}\r\n\r\nexport let onSubmit = (email, password) => {\r\n    return {\r\n        type: 'ON-SUBMIT',\r\n        email,\r\n        password\r\n    }\r\n}\r\n\r\nexport let setLoginData = (email, password) => {\r\n    return {\r\n        type: 'SET-LOGIN-DATA',\r\n        data: {\r\n            email,\r\n            password\r\n        }\r\n    }\r\n} \r\n\r\nexport const AuthThunkCreator = () => {\r\n    return (dispatch) => {\r\n        authAPI.getAuth().then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data //To refresh it in your mind visit learn.javascript.ru\r\n                dispatch(setUserData(id, email, login, true))\r\n            }\r\n        })\r\n        return 'hey'\r\n    }\r\n    \r\n}\r\n\r\nexport const LoginThunkCreator = (email, password) => \r\n    (dispatch) => {\r\n        authAPI.getLogin(email, password).then(response => {\r\n            if (response.data.resultCode ===  0) {\r\n                dispatch(AuthThunkCreator())\r\n            }\r\n            else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n                dispatch(stopSubmit('login', {_error: message})) // stopSubmit how to make this kind of prepand and what to do \r\n            }\r\n        }) // the teaser and how to make this king of prepand and how to make this kind of meaning and what to do else \r\n    }\r\n\r\n\r\n\r\nexport const LogoutThunkCreator = () => {\r\n    return (dispatch) => {\r\n        authAPI.getLogout().then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n/* export const LoginThunkCreator = () => {\r\n    return(dispatch) => {\r\n        authAPI.getLogin().then(response => {\r\n            if (response.data.resultCode === 1) {\r\n                let {email, password, rememberMe} = response.data.data\r\n                dispatch(setLoginData(email, password, rememberMe))\r\n            }\r\n        })\r\n    }\r\n}   */\r\n\r\nexport default authReducer","import  { usersAPI } from './../api/api'\r\n\r\n//let initialstate1 = {\r\n//    listOfUsers: [\r\n        /* {\r\n            name: 'Maxim',\r\n            status: 'bla bla bla',\r\n            city: 'Mocsow',\r\n            toggle: true,\r\n            id: 1\r\n        },\r\n        {\r\n            name: 'Kate',\r\n            status: 'Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus...',\r\n            city: 'Los Angeles',\r\n            toggle: true,\r\n            id: 2\r\n        },\r\n        {\r\n            name: 'Kurt',\r\n            status: 'Et harum quidem rerum facilis est et expedita distinctio, qui...',\r\n            city: 'Vienna',\r\n            toggle: false,\r\n            id: 3\r\n        },\r\n        {\r\n            name: 'ZanYang',\r\n            status: 'Sed ut perspiciatis, qui blanditiis praesentium voluptatum deleniti atque corrupti,...',\r\n            city: 'Beijing',\r\n            toggle: true,\r\n            id: 4\r\n        } */\r\n//    ]\r\n//}\r\n\r\nlet initialstate = {\r\n    users: [],\r\n    totalUsersCount: 25,\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    isFetching: false, // loading page\r\n    followingInProgress: false // disabling page during ajax requesting\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialstate, action) => {\r\n    \r\n\r\n        \r\n        switch(action.type) {\r\n            case \"FOLLOW\":\r\n                return {...state, users: state.users.map(u => {\r\n                    \r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n\r\n                    return u\r\n                    })\r\n                }\r\n            case \"UNFOLLOW\":\r\n                return {...state, users: state.users.map((u) => {\r\n                    \r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                }\r\n\r\n                return u\r\n                })\r\n            }\r\n            case \"SET-USERS\": {\r\n                return {...state, users: action.users}\r\n            }\r\n            case \"SET-USERS-CURRENTPAGE\": {\r\n                return {...state, currentPage: action.currentPageProps}\r\n            }\r\n            case \"TOGGOLE-IS-FOLLOWING\": {\r\n                return {...state, followingInProgress: action.isFetching}\r\n            }\r\n            default:  // this is default \r\n                return state\r\n\r\n        }\r\n}\r\n\r\n\r\n\r\nexport const follow = (userID) => {\r\n    \r\n    return {\r\n        type: 'FOLLOW',\r\n        userID\r\n    }\r\n}\r\n\r\n\r\nexport const unFollow = (userID) => {\r\n    return {\r\n        type: 'UNFOLLOW',\r\n        userID\r\n    }\r\n}\r\n\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: 'SET-USERS',\r\n        users\r\n    }\r\n}\r\n\r\nexport const setUsersCurrent = (currentPageProps) => {\r\n    return {\r\n        type: 'SET-USERS-CURRENTPAGE',\r\n        currentPageProps\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const followAcceptThunkCreator = (userID) => {\r\n    return (dispatch) => {\r\n        usersAPI.makeUsersFollowed(userID).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(follow(userID))\r\n            }\r\n            //props.toggleIsFollowing(false)\r\n\r\n        }) \r\n    }\r\n}\r\n\r\nexport const unfollowAcceptThunkCreator = (userID) => {\r\n    return (dispatch) => {\r\n        usersAPI.makeUsersUnfollowed(userID).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(unFollow(userID))\r\n            }\r\n            //props.toggleIsFollowing(false)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => { // here you also need to add toggle and loader \r\n    return (dispatch) => {\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setUsers(data.items))\r\n        }) \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//how we gonna make thunks\r\n\r\n\r\n/* export const getUsersThunk = (dispatch) => {\r\n    usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(response => {\r\n        this.props.setUsers(response.items)\r\n        })\r\n} */\r\n\r\nexport default usersReducer // we need\r\n\r\n\r\n\r\n\r\n","//import { stopSubmit } from 'redux-form'\r\n//import { authAPI } from '../api/api'\r\nimport { AuthThunkCreator } from './auth-reducer'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\n\r\nconst contentReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'INITIALIZED-SUCCESS': {\r\n            return {\r\n                ...state,\r\n                initialized: true \r\n            } \r\n        }\r\n        case 'ON-SUBMIT': {\r\n            return {\r\n                ...state,\r\n                ...action.password,\r\n                ...action.email,\r\n                isAuth: true\r\n            }\r\n        }\r\n        \r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\nexport let initializedSuccessfully = () => {\r\n    return {\r\n        type: 'INITIALIZED-SUCCESS'\r\n    }\r\n}\r\n\r\nexport let initializeContent = () => (dispatch) => {\r\n    \r\n    let promise = dispatch(AuthThunkCreator())\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccessfully())\r\n    })\r\n    //dispatch(initializedSuccessfully())\r\n}\r\n\r\nexport let setLoginData = (email, password) => {\r\n    return {\r\n        type: 'SET-LOGIN-DATA',\r\n        data: {\r\n            email,\r\n            password\r\n        }\r\n    }\r\n} \r\n\r\n/* export const AuthThunkCreator = () => {\r\n    return (dispatch) => {\r\n        authAPI.getAuth().then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data //To refresh it in your mind visit learn.javascript.ru\r\n                dispatch(setUserData(id, email, login, true))\r\n            }\r\n        })\r\n    }\r\n} */\r\n\r\n/* export const LoginThunkCreator = (email, password) => \r\n    (dispatch) => {\r\n        authAPI.getLogin(email, password).then(response => {\r\n            if (response.data.resultCode ===  0) {\r\n                dispatch(AuthThunkCreator())\r\n            }\r\n            else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n                dispatch(stopSubmit('login', {_error: message})) // stopSubmit how to make this kind of prepand and what to do \r\n            }\r\n        }) // the teaser and how to make this king of prepand and how to make this kind of meaning and what to do else \r\n    }\r\n */\r\n\r\n\r\n/* export const LogoutThunkCreator = () => {\r\n    return (dispatch) => {\r\n        authAPI.getLogout().then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false))\r\n            }\r\n        })\r\n    }\r\n} */\r\n\r\n/* export const LoginThunkCreator = () => {\r\n    return(dispatch) => {\r\n        authAPI.getLogin().then(response => {\r\n            if (response.data.resultCode === 1) {\r\n                let {email, password, rememberMe} = response.data.data\r\n                dispatch(setLoginData(email, password, rememberMe))\r\n            }\r\n        })\r\n    }\r\n}   */\r\n\r\nexport default contentReducer","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport authReducer from './auth-reducer'\r\n//import defaultReducer from './default-reducer'\r\nimport profileReducer from './profile-reducer'\r\nimport usersReducer from './users-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\n//import { followAC, unfollowAC, setUsersAC } from './users-reducer'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport contentReducer from './component-reducer'\r\n\r\nlet reducers = combineReducers({\r\n    usersPage: usersReducer, \r\n    profilePage: profileReducer,\r\n    form: formReducer,\r\n    auth: authReducer,\r\n    content: contentReducer\r\n    \r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware)) \r\n\r\nwindow.store = store\r\n\r\n//console.log(store.getState().profileReducer);\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './../../styles/SidebarList.css'\r\n\r\nconst NavLinks = [ \r\n    {id: 1, header: 'Profile', link: '/profile'}, \r\n    {id: 2, header: 'Messages', link: '/dialogs'}, \r\n    {id: 3, header: 'News', link: '/news'}, \r\n    {id: 4, header: 'Music', link: '/music'}, \r\n    {id: 5, header: 'Settings', link: '/settings'},\r\n    {id: 6, header: 'Find Someone', link: '/findSomeone'}\r\n]\r\n\r\nlet NavLinksMapped = NavLinks.map((item) => {\r\n    return <NavLink to = {item.link} key = {item.id}>{item.header}</NavLink>\r\n})\r\n\r\nexport default function SidebarList() {\r\n    return (\r\n        <nav className=\"sidebarlist\" >\r\n            <div className='list'>\r\n                <div>{NavLinksMapped}</div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from \"react\"\r\nimport './../../styles/Sidebar.css'\r\nimport SidebarList from './SidebarList.jsx'\r\n\r\n\r\n\r\nexport default function Sidebar(props) {\r\n    return (\r\n        <div className=\"sidebar\" ><SidebarList /></div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Music() {\r\n    return (\r\n        <div className=\"music\"></div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Settings() {\r\n    return(\r\n        <div className=\"settings\"></div>\r\n    )\r\n}","//import * as axios from 'axios'\r\nimport React from 'react' \r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n    export default function GetUsersF(props) {\r\n        debugger\r\n        let pageCount = Math.ceil(props.totalUsersCount / props.pageSize) \r\n        \r\n        let pages = []\r\n\r\n        for (let i = 1; i <= pageCount; i++) {\r\n            pages.push(i) // this is what to make it to push into the array  \r\n        }\r\n\r\n        //console.log(pages);\r\n        \r\n        return (\r\n        \r\n        <div className=\"wrapper\"> \r\n            \r\n            <span>\r\n                <div>\r\n                    {pages.map( item => { return <span onClick = {(e) => {props.onPageChanged(item)}}>{item}</span>})}\r\n                </div>\r\n            </span>\r\n            \r\n            {\r\n            props.users.map(u => \r\n                <div key = {u.id}>\r\n                    <div>\r\n                        <NavLink to = {'/profile/' + u.id}><div>{u.name}</div></NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            u.followed \r\n                            ? <button  onClick = {() => {\r\n                                props.unfollowAcceptThunkCreator(u.id)\r\n                            }}>unfollow</button>\r\n                            \r\n                            \r\n                            : \r\n                            \r\n                            \r\n                            <button onClick = {() => {\r\n                                props.followAcceptThunkCreator(u.id)\r\n                            }}>follow</button>\r\n                        }\r\n                    </div> \r\n                </div>\r\n                )\r\n            }\r\n        </div>)\r\n    \r\n    }\r\n\r\n\r\n","import { createSelector } from \"reselect\"\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getStateSelector = (state) => {\r\n    return getUsers(state).filter(u => true)\r\n}\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getCurretPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n} \r\n\r\nexport const getToggleIsFollowing = (state) => {\r\n    return state.usersPage.toggleIsFollowing\r\n}","//import React from 'react'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport GetUsersF from './getUsersF'\r\n//import { followAc } from './../../../redux/redux-store'\r\nimport { follow, unFollow, setUsersCurrent, getUsersThunkCreator, unfollowAcceptThunkCreator, followAcceptThunkCreator} from '../../../redux/users-reducer'\r\n//import { AddDataAC } from '../../../redux/users-reducer'\r\n//import * as axios from 'axios' //how to use axios ?? Good question, ok i can tell you how to make that \r\n//import preloader from '../../../assets'\r\n//import { usersAPI } from './../../../api/api'\r\nimport { compose } from 'redux'\r\nimport { getCurretPage, getPageSize, getTotalUsersCount, getToggleIsFollowing, getUsers } from '../../../redux/selectors/users-selectors'\r\n\r\n\r\nclass GetUsersContainer extends React.Component {  // 62 make \r\n    \r\n\r\n    componentDidMount() {\r\n        /* usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n            this.props.setUsers(data.items)\r\n        }) */\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n\r\n    onPageChanged = (currentPageProps) => {\r\n        //this.props.setUsersCurrentPage(currentPageProps);\r\n        //usersAPI.getUsers(currentPageProps, this.props.pageSize).then(data => {this.props.setUsers(data.items)})\r\n        this.props.getUsersThunkCreator(currentPageProps, this.props.pageSize)\r\n    }\r\n\r\n    \r\n\r\n    \r\n    render() {\r\n        return   <>   \r\n\r\n            {/* {this.isFetching ? <img src = {preloader}/> : null} */}\r\n            \r\n            <GetUsersF \r\n                users = {this.props.users}\r\n                totalUsersCount = {this.props.totalUsersCount}\r\n                pageSize = {this.props.pageSize}\r\n                //follow = {this.props.follow}\r\n                //unFollow = {this.props.unFollow}\r\n                toggleIsFollowing = {this.props.toggleIsFollowing}\r\n                onPageChanged = {this.onPageChanged}\r\n                unfollowAcceptThunkCreator = {this.props.unfollowAcceptThunkCreator}\r\n                followAcceptThunkCreator = {this.props.followAcceptThunkCreator}\r\n            />\r\n                </> \r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        currentPage: getCurretPage(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        toggleIsFollowing: getToggleIsFollowing(state)\r\n    }\r\n    \r\n    \r\n} \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* export default connect (mapStateToProps,\r\n    {\r\n        follow: follow,\r\n        unFollow: unFollow,\r\n        //setUsers: setUsers,\r\n        setUsersCurrentPage: setUsersCurrent,\r\n        getUsersThunkCreator: getUsersThunkCreator,\r\n        unfollowAcceptThunkCreator: unfollowAcceptThunkCreator,\r\n        followAcceptThunkCreator: followAcceptThunkCreator\r\n    }\r\n) (GetUsersContainer) \r\n */\r\n\r\nexport default compose ( connect(mapStateToProps,\r\n    {\r\n        follow: follow,\r\n        unFollow: unFollow,\r\n        setUsersCurrentPage: setUsersCurrent,\r\n        getUsersThunkCreator: getUsersThunkCreator,\r\n        unfollowAcceptThunkCreator: unfollowAcceptThunkCreator,\r\n        followAcceptThunkCreator: followAcceptThunkCreator\r\n    }\r\n)) (GetUsersContainer) \r\n\r\n\r\n//console.log(GetUsersContainer);","import React from 'react'\r\nimport GetUsersContainer from './getUsersContainer'\r\n\r\nexport default function FindSomeone() {\r\n    return (\r\n        <GetUsersContainer />\r\n    )\r\n}","import React from 'react' \r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {LoginThunkCreator} from './../../redux/auth-reducer'\r\nimport style from './../../components/common/FormsController.module.css'\r\n\r\n\r\n\r\n// how to login \r\nconst LoginForm = (props) => {\r\n    return(\r\n\r\n            <form  onSubmit = {props.handleSubmit}>\r\n                <div>\r\n                    <Field name = {'login'} type=\"text\" placeholder = {'Login'} component = {'input'}/>\r\n                </div>\r\n                <div>\r\n                    <Field name = {'password'} type=\"password\" placeholder = {'Password'} component = {'input'} />\r\n                </div>\r\n                <div>\r\n                    <Field name = {'checkbox'} type=\"checkbox\" component = {'input'}/>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        props.error && <div className = {style.fromSummaryError}>{props.error}</div>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <button>Submit</button>\r\n                </div>\r\n        </form>\r\n        \r\n            \r\n        \r\n    )\r\n}\r\n\r\n\r\nconst  LoginReduxForm = reduxForm({form: 'login'}) (LoginForm)//  this reduxFrom-function give severela tools to Login\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.LoginThunkCreator(formData.login, formData.password)\r\n    }\r\n        \r\n    if (props.isAuth === true) return <Redirect to = {'/profile'} />\r\n\r\n    return( \r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm  onSubmit = {onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n} \r\n\r\n\r\n\r\nexport default connect (mapStateToProps, {LoginThunkCreator}) (Login)\r\n\r\n\r\n\r\n","import React from \"react\"\r\nimport { Route, withRouter } from \"react-router-dom\"\r\nimport './../../styles/Content.css'\r\nimport Music from './music/Music'\r\nimport Settings from './settings/Settings'\r\nimport Findsomeone from './findSomeone/findSomeone'\r\nimport Login from './../Login/Login'\r\nimport {LogoutThunkCreator, setUserData} from './../../redux/auth-reducer'\r\n//import {authAPI} from '../api/api'\r\nimport {initializeContent} from '../../redux/component-reducer'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\nconst ProfileContainer = React.lazy(() => import('./myPosts/ProfileContainer'))\r\nconst News = React.lazy(() => import('./news/News'))\r\n\r\n\r\n\r\nclass Content extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeContent()\r\n    } \r\n    \r\n    render() {\r\n\r\n    {   \r\n        if (!this.props.initialized) {\r\n            return <div>watiting</div>\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"content\">\r\n            <Route path = '/profile/:userId?' render = {() => <React.Suspense fallback = {<div>Loading...</div>}><ProfileContainer /></React.Suspense>} />\r\n            {/*<Route path = '/dialogs' render = {() => <Dialog />} />*/}    \r\n            <Route path = '/news' render = {()=> <React.Suspense><News/></React.Suspense> } />\r\n            <Route path = '/music' component = {Music} />\r\n            <Route path = '/settings' component = {Settings} />\r\n            <Route path = '/findSomeone' render = {() => <Findsomeone />} />\r\n            <Route path = '/login' render = {() => <Login />} /> \r\n        </div>\r\n    )\r\n    }\r\n    //need to make put this component (Loginreduxfrom) to Login.js file\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.content.initialized\r\n})\r\n\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect \r\n    (\r\n        mapStateToProps, { setUserData: setUserData,\r\n                initializeContent: initializeContent, \r\n                LogoutThunkCreator: LogoutThunkCreator}\r\n    )\r\n    \r\n    ) (Content)\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './HeaderLogin.css'\r\n\r\n\r\nconst HeaderLogin = (props) => {\r\n\r\n    return(\r\n        <div className=\"login-block\">\r\n            {  props.isAuth \r\n            ?\r\n                \r\n                <div>{props.login} - <button onClick = {props.LogoutThunkCreator} >log out</button></div>\r\n                \r\n            : \r\n                <NavLink to = {'/login'}>\r\n                    log in\r\n                </NavLink> \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderLogin","import React from \"react\"\r\nimport './../../styles/Header.css'\r\n/* import { Fa500Px } from 'react-icons/fa'\r\nimport { IconContext } from \"react-icons\" */\r\nimport HeaderLogin from './HeaderLogin'\r\n\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n    \r\n    \r\n    return (\r\n        <div className=\"header\">\r\n            <HeaderLogin  LogoutThunkCreator = {props.LogoutThunkCreator} isAuth = {props.isAuth} login = {props.login} />\r\n            {/* <IconContext.Provider value = {{className: 'github', size: '35px'}}>\r\n                <div><Fa500Px /></div>\r\n            </IconContext.Provider> */}  {/* this is our icon that we need to style */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react' \r\nimport Header from './Header'\r\nimport {LogoutThunkCreator} from '../../redux/auth-reducer'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    /* componentDidMount() {\r\n        this.props.AuthThunkCreator()   // Thanks to thunk we can make axios request without Header component \r\n    } */\r\n    \r\n    render() {\r\n        return <Header LogoutThunkCreator = {this.props.LogoutThunkCreator} {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\n\r\nexport default connect (mapStateToProps, {LogoutThunkCreator: LogoutThunkCreator}) (HeaderContainer)\r\n\r\n\r\n","import React from 'react';\nimport Sidebar from '../sidebar/Sidebar'\nimport Content from '../contentAndPost/Content'\n//import logo from './src/logo.svg';\nimport './App.css';  \nimport { BrowserRouter } from 'react-router-dom'\nimport HeaderContainer from '../header/HeaderContainer';\n\n\nfunction App() {\n  //console.log(props.state.profileReducer);\n  \n  return (\n    \n      <div className=\"App\">\n        <BrowserRouter>\n          <HeaderContainer />\n          <Sidebar />\n          <Content />\n        </BrowserRouter>\n      </div>\n    \n  );\n}\n\nexport default App;\n","//import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport {Provider} from 'react-redux'\n//import * as serviceWorker from './serviceWorker';\n//import state from './redux/store';\n\n//console.log(store.getState());\n\nReactDOM.render(\n        <Provider store = {store}>\n            <App />\n        </Provider>,\n    document.getElementById('root')\n    );\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","import { profileAPI, usersAPI } from './../api/api'\r\n\r\nlet initialState = { \r\n    posts: [\r\n        {id: 0, message: \"What's up\"}, \r\n        {id: 1, message: \"How are you\"}\r\n    ],\r\n    listOfNamesData : [\r\n        {name: \"Alex\", id: 1}, \r\n        {name: \"Mark\", id: 2}, \r\n        {name: \"Dima\", id: 3}, \r\n        {name: \"Mukhsin\", id: 4}, \r\n        {name: \"Richard\", id: 5},\r\n        {name: \"Otto\", id: 6},\r\n        {name: \"Gunna\", id: 7}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    \r\n\r\n    switch(action.type) {\r\n        case 'ADD-POST': {\r\n            let somePost = {\r\n                id: 2, message: action.PostMessage\r\n            }\r\n            let stateCopy = {...state}\r\n            console.log(stateCopy);\r\n            \r\n            stateCopy.posts = [...state.posts]\r\n            stateCopy.posts.push(somePost);\r\n            return stateCopy \r\n\r\n        }\r\n        case 'SET-USER-PROFILE': {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case 'SET-STATUS': {\r\n            return {...state, status: action.status}\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n\r\n    \r\n    /* if (action.type === 'ADD-POST') {\r\n        let somePost = {\r\n            id: 2, message: action.PostMessage\r\n        }\r\n        let stateCopy = {...state}\r\n        //console.log(stateCopy);\r\n        \r\n        stateCopy.posts = [...state.posts]\r\n        stateCopy.posts.push(somePost);\r\n        return stateCopy //how to make this kind of prepadn and what to do this kind /\r\n    }\r\n    else if (action.type === 'CHANGE-NEW-POST-TEXT') {\r\n        let stateCopy = {...state}\r\n        stateCopy.newPostText = action.newValue\r\n        return stateCopy\r\n    }\r\n    else if (action.type === 'SET-USER-PROFILE') {\r\n        \r\n        return {...state, profile: action.profile}\r\n    }\r\n    return state */\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: 'ADD-POST',\r\n        PostMessage: newPostText\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: 'SET-USER-PROFILE',\r\n        profile\r\n    }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: 'SET-STATUS',\r\n        status\r\n    }\r\n}\r\n\r\nexport const getProfileThunkCreator = (userId) => \r\n    (dispatch) => {\r\n        usersAPI.getProfile(userId).then(response => {\r\n            dispatch(setUserProfile(response.data))\r\n        })\r\n    }\r\n        \r\n\r\nexport const getStatusThunkCreator = (userId) => \r\n    (dispatch) => {\r\n        profileAPI.getStatus(userId).then(response => {\r\n            dispatch(setStatus(response.data))\r\n        })\r\n    }\r\n\r\nexport const updateStatusThunkCreator = (status) => \r\n    (dispatch) => {\r\n        profileAPI.updateStatus(status).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\nexport default profileReducer"],"sourceRoot":""}